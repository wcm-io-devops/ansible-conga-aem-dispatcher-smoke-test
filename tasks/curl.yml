- name: Fail when 'conga_aemdst_curl_url' is not defined.
  fail:
    msg: "Please define the url in variable: 'conga_aemdst_curl_url'"
  when: conga_aemdst_curl_url is none

- name: Fail when 'conga_aemdst_curl_expected_url' is not defined.
  fail:
    msg: "Please define the url in variable: 'conga_aemdst_curl_expected_url'"
  when: conga_aemdst_curl_expected_url is none

- name: "Set default facts"
  set_fact:
    _write_out_arg: "%{redirect_url}\n%{http_code}"
    _location_arg: ""
    _insecure_arg: ""
    _noproxy_arg: ""
    _resolve_arg: ""
    _headers_arg: ""
    _expected_http_code: "{{ conga_aemdst_curl_expected_http_code }}"

- name: "Set follow redirect facts"
  set_fact:
    _write_out_arg: "%{url_effective}\n%{http_code}"
    _location_arg: "--location"
    _expected_http_code: "{{ conga_aemdst_curl_follow_redirects_expected_http_code }}"
  when: conga_aemdst_curl_follow_redirects

- name: "Add '--insecure'"
  set_fact:
    _insecure_arg: "--insecure"
  when: conga_aemdst_curl_allow_insecure

- name: "Add '--noproxy'"
  set_fact:
    _noproxy_arg: '--noproxy "*"'
  when: conga_aemdst_curl_noproxy

- name: "Add '--resolve'."
  set_fact:
    _resolve_arg: "{{ _resolve_arg }} --resolve '{{ item.host }}:{{ item.port }}:{{ item.address }}'"
  with_items:
    - "{{ conga_aemdst_curl_resolve }}"
  when: conga_aemdst_curl_resolve is defined

- name: "Add '--headers'."
  set_fact:
    _headers_arg: "{{ _headers_arg }} --header \"{{ item }}\""
  with_items:
    - "{{ conga_aemdst_curl_headers }}"
  when: conga_aemdst_curl_headers is defined

- debug:
    msg:
      - "check redirect from: {{ conga_aemdst_curl_url }}"
      - "check redirect to  : {{ conga_aemdst_curl_expected_url }}"
      - "check for http code: {{ _expected_http_code }}"
      - "check with args    : {{ _insecure_arg }} {{ _location_arg }} {{ _resolve_arg }}"

- name: "Executing curl"
  shell: 'curl \
    {{ _insecure_arg }} \
    {{ _location_arg }} \
    {{ _noproxy_arg }} \
    {{ _resolve_arg }} \
    {{ _headers_arg }} \
    --max-time {{ conga_aemdst_curl_timeout }} \
    --connect-timeout {{ conga_aemdst_curl_connect_timeout }} \
    --write-out "{{ _write_out_arg }}" \
    --output /dev/null --silent \
    {{ conga_aemdst_curl_url }}'
  register: curl_result
  delegate_to: "{{ conga_aemdst_curl_host }}"
  args:
    warn: false
  tags:
    - skip_ansible_lint

- name: "Parse curl result"
  set_fact:
    _actual_url: "{{ curl_result.stdout_lines[0] }}"
    _actual_http_code: "{{ curl_result.stdout_lines[1] }}"

# lazy test, expected url can be part of actual url
- name: "Assert that actual url matches expected url (lazy)"
  assert:
    that:
      - "{{ conga_aemdst_curl_expected_url in _actual_url }}"
    msg: >
      The actual url does not match with expected url (lazy)
      expected: {{ conga_aemdst_curl_expected_url }}
      actual  : {{ _actual_url }}
  when: conga_aemdst_curl_expected_url_test_lazy

# non lazy test, exact match requested
- name: "Assert that actual url matches expected (strict)"
  assert:
    that:
      - "{{ conga_aemdst_curl_expected_url == _actual_url }}"
    msg: >
      The actual url does not match with expected url (strict)
      expected: {{ conga_aemdst_curl_expected_url }}
      actual  : {{ _actual_url }}
  when: not conga_aemdst_curl_expected_url_test_lazy

- name: "Assert that actual response code matches {{ _expected_http_code }}"
  assert:
    that:
      - "{{ _expected_http_code }} == {{ _actual_http_code }}"
    msg: >
      The actual http_code does not match with expected http_code
      expected: {{ _expected_http_code }}
      actual  : {{ _actual_http_code }}
